# Generated by Django 5.1.4 on 2025-06-30 12:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tracker', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systolic', models.PositiveIntegerField(help_text='Systolic blood pressure (e.g., 120)', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(250)])),
                ('diastolic', models.PositiveIntegerField(help_text='Diastolic blood pressure (e.g., 80)', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(150)])),
                ('glucose_level', models.FloatField(help_text='Blood glucose level', validators=[django.core.validators.MinValueValidator(20.0), django.core.validators.MaxValueValidator(600.0)])),
                ('glucose_unit', models.CharField(choices=[('mg/dL', 'mg/dL'), ('mmol/L', 'mmol/L')], default='mg/dL', help_text='Unit of glucose measurement', max_length=10)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the reading')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the reading was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the reading was last updated')),
                ('user', models.ForeignKey(help_text='User who recorded this reading', on_delete=django.db.models.deletion.CASCADE, related_name='readings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Health Reading',
                'verbose_name_plural': 'Health Readings',
                'ordering': ['-created_at'],
                'permissions': [('can_view_all_readings', "Can view all users' health readings")],
                'indexes': [models.Index(fields=['user'], name='reading_user_idx'), models.Index(fields=['created_at'], name='reading_recorded_idx')],
            },
        ),
    ]
